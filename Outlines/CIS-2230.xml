<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="../COML.xsl" type="text/xsl" media="screen" ?>
<?mso-infoPathSolution productVersion="11.0.8034" PIVersion="1.0.0.0" name="urn:schemas-microsoft-com:office:infopath:COML:http---www-vtc-vsc-edu-COML-0-0" language="en-us" href="COML.xsn" solutionVersion="1.0.0.47" ?>
<?mso-application progid="InfoPath.Document"?>

<outline created="2010-04-05" xmlns="http://www.vtc.vsc.edu/COML_0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.vtc.vsc.edu/COML_0.0 ../COML.xsd">

  <summary>
    <authors>
      <author>Nagi Basha</author>
    </authors>
    <department-program>Computer Information Systems</department-program>
    <number>CIS-2230</number>
    <title>System Administration</title>
    <prerequisites>
      <OR>
        <course>CIS-2025</course>
        <course>CIS-2261</course>
        <course>CIS-2271</course>
      </OR>
    </prerequisites>
    <credits>4</credits>
    <graded>true</graded>
    <time lecture="3" laboratory="2" studio="0" recitation="0" study="6"/>
    <semesters>
      <semester>Fall</semester>
    </semesters>
    <description>In this course the student explores the basics of system management. The course
      provides the student with enough theory to understand how operating systems work and to
      interpret the output of various management tools. It also covers practical issues in
      system administration including process, memory, and file system monitoring and
      performance tuning. Some topics in computer security are also discussed. Unix, Windows
      Server 2008, and Windows 7 are the specific systems currently studied.</description>
  </summary>
  <short-title>Sys Admin</short-title>
  <course-level>2000</course-level>
  <required-texts>
    <book>
      <title>Essential System Administration</title>
      <edition>3rd</edition>
      <authors>
        <author>AEleen Frisch</author>
      </authors>
      <publisher>O'Reilly and Associates</publisher>
    </book>
  </required-texts>
  <course-outcomes>
    <outcome>Install a significant operating system.</outcome>
    <outcome>Understand the basic subsystems provided by an operating system and how to access
      them (using the API).</outcome>
    <outcome>Understand how different subsystems affect overall system performance and how to
      use tools to monitor system performance.</outcome>
    <outcome>Understand how process scheduling works.</outcome>
    <outcome>Understand how to synchronize multithreaded applications using
      semaphores.</outcome>
    <outcome>Write a small shell script using bash.</outcome>
    <outcome>Understand different types of inter-process communication (IPC) with specific
      knowledge on shared memory.</outcome>
    <outcome>Understand the concepts in writing a small device driver for a specific
      OS.</outcome>
    <outcome>Understand a public key cryptography system and be able to use such a system enough
      to send and receive encrypted materials to/from another individual.</outcome>
    <outcome>Understand how a file system works.</outcome>
  </course-outcomes>
  <course-content>
    <topic hours="6">API programming</topic>
    <topic hours="3">Performance monitoring</topic>
    <topic hours="3">Processes (scheduling, creation)</topic>
    <topic hours="6">Multi-threaded applications (implementing, using semaphores,
      issues)</topic>
    <topic hours="3">Shell scripting</topic>
    <topic hours="3">Memory (physical, virtual, swap) and memory monitoring</topic>
    <topic hours="3">Interprocess communication (pipes, shared memory, sockets)</topic>
    <topic hours="6">Device drivers</topic>
    <topic hours="3">Encryption (symmetric, public key)</topic>
    <topic hours="6">File systems (FAT, journaled, NFS)</topic>
    <topic hours="3">Quizzes and tests</topic>
  </course-content>
  <laboratory-studio-outcomes>
    <summary>The laboratory is designed to enhance the student's understanding of the lecture
      topics. With a few exceptions, most of the labs are programming based. In these labs, the
      students write small programs to demonstrate and reinforce topics presented in the
      lecture. The remaining labs are hands-on labs that have students install an operating
      system and then use tools to evaluate the operating system under different
      situations.</summary>
  </laboratory-studio-outcomes>
  <laboratory-studio-content>
    <topic>Installing Linux</topic>
    <topic>UNIX API programming</topic>
    <topic>Process and CPU monitoring</topic>
    <topic>Multi-threaded Programming</topic>
    <topic>Shell Scripts (using bash)</topic>
    <topic>Unix Start-up Scripts</topic>
    <topic>Virtual Memory</topic>
    <topic>Compiling the Linux Kernel</topic>
    <topic>Interprocess Communication via Pipes</topic>
    <topic>Device Drivers (linux, loadable modules)</topic>
    <topic>Using GPG for Public Key Cryptography</topic>
    <topic>Linux ext2 Filesystem</topic>
    <topic>Win32 Directory Scanning (Win32 API)</topic>
    <topic>Installing and configuring Apache</topic>
  </laboratory-studio-content>
  <delivery-method>face-to-face</delivery-method>
</outline>
